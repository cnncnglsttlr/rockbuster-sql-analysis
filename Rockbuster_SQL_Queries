/* Rockbuster SQL Queries
*/

/* ---------------------------------------------------------
Analysis: Top 10 Countries by Customer Count
Tables  : customer, address, city, country
--------------------------------------------------------- */
SELECT co.country, COUNT(c.customer_id) AS customer_count
FROM customer c
JOIN address a ON c.address_id = a.address_id
JOIN city ci ON a.city_id = ci.city_id
JOIN country co ON ci.country_id = co.country_id
GROUP BY co.country
ORDER BY customer_count DESC
LIMIT 10;

/* ---------------------------------------------------------
Analysis: Top 10 Cities by Customer Count
Tables  : customer, address, city, country
--------------------------------------------------------- */
SELECT C.city, D.country, COUNT (customer_id) AS count_of_customers
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D on C.country_id = D.country_id
WHERE D.country IN (
  SELECT D.country
  FROM customer A
  INNER JOIN address B ON A.address_id = B.address_id
  INNER JOIN city C ON B.city_id = C.city_id
  INNER JOIN country D on C.country_id = D.country_id
  GROUP BY country
  ORDER BY COUNT (customer_id) DESC
  LIMIT 10
)
GROUP BY D.country, C.city
ORDER BY COUNT (customer_id) DESC
LIMIT 10;

/* ---------------------------------------------------------
Analysis: Top 5 Customers by Revenue
Tables  : customer, payment, address, city, country
--------------------------------------------------------- */
SELECT c.first_name || ' ' || c.last_name AS full_name,
       co.country,
       SUM(p.amount) AS total_revenue
FROM payment p
JOIN customer c ON p.customer_id = c.customer_id
JOIN address a  ON c.address_id = a.address_id
JOIN city ci    ON a.city_id    = ci.city_id
JOIN country co ON ci.country_id = co.country_id
GROUP BY full_name, co.country
ORDER BY total_revenue DESC
LIMIT 5;

/* ---------------------------------------------------------
Analysis: Top 10 Countries by Total Customer Payments
Tables  : payment, customer, address, city, country
--------------------------------------------------------- */
SELECT co.country,
       SUM(p.amount) AS total_payments
FROM payment p
JOIN customer c ON p.customer_id = c.customer_id
JOIN address a  ON c.address_id  = a.address_id
JOIN city ci    ON a.city_id     = ci.city_id
JOIN country co ON ci.country_id = co.country_id
GROUP BY co.country
ORDER BY total_payments DESC
LIMIT 10;

/* ---------------------------------------------------------
Analysis: Most Common First Name Among Customers
Tables  : customer
--------------------------------------------------------- */
SELECT first_name,
       COUNT(*) AS name_count
FROM customer
GROUP BY first_name
ORDER BY name_count DESC
LIMIT 10;

/* ---------------------------------------------------------
Analysis: Distribution of Films by Rating Category
Tables  : film
--------------------------------------------------------- */
SELECT rating,
       COUNT(*) AS rating_count
FROM film
GROUP BY rating
ORDER BY rating_count DESC;

/* ---------------------------------------------------------
Analysis: Genre Distribution (Category/Film Count)
Tables  : category, film_category
--------------------------------------------------------- */
SELECT c.name,
       COUNT(fc.film_id) AS film_count
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
GROUP BY c.name
ORDER BY film_count DESC;

/* ---------------------------------------------------------
Analysis: Film Length vs. Rentals/Revenue
Tables  : film, inventory, rental, payment
--------------------------------------------------------- */
SELECT
  CASE
    WHEN f.length <= 60 THEN '<=60'
    WHEN f.length <= 90 THEN '61–90'
    WHEN f.length <= 120 THEN '91–120'
    ELSE '120+'
  END AS length_bucket,
  COUNT(r.rental_id)        AS total_rentals,
  ROUND(SUM(p.amount), 2)   AS total_revenue
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r    ON i.inventory_id = r.inventory_id
JOIN payment p   ON r.rental_id = p.rental_id
GROUP BY length_bucket
ORDER BY MIN(f.length);

/* ---------------------------------------------------------
Analysis: Yearly Rentals and Revenue Trend
Tables  : rental, payment
--------------------------------------------------------- */
SELECT
  EXTRACT(YEAR FROM r.rental_date) AS year,
  COUNT(r.rental_id)               AS rentals,
  ROUND(SUM(p.amount), 2)          AS revenue
FROM rental r
LEFT JOIN payment p ON p.rental_id = r.rental_id
GROUP BY year
ORDER BY year;

/* ---------------------------------------------------------
Analysis: Top 10 Most Watched Actors
Tables  : actor, film_actor, film, inventory, rental
--------------------------------------------------------- */
SELECT a.actor_id,
       a.first_name,
       a.last_name,
       COUNT(r.rental_id) AS rental_count
FROM actor a
JOIN film_actor fa ON a.actor_id = fa.actor_id
JOIN film f        ON fa.film_id = f.film_id
JOIN inventory i   ON f.film_id  = i.film_id
JOIN rental r      ON i.inventory_id = r.inventory_id
GROUP BY a.actor_id, a.first_name, a.last_name
ORDER BY rental_count DESC
LIMIT 10;

/* ---------------------------------------------------------
Analysis: Top 10 Highest Revenue Actors
Tables  : actor, film_actor, film, inventory, rental, payment
--------------------------------------------------------- */
SELECT a.actor_id,
       a.first_name,
       a.last_name,
       ROUND(SUM(p.amount), 2) AS total_revenue
FROM actor a
JOIN film_actor fa ON a.actor_id = fa.actor_id
JOIN film f        ON fa.film_id = f.film_id
JOIN inventory i   ON f.film_id  = i.film_id
JOIN rental r      ON i.inventory_id = r.inventory_id
JOIN payment p     ON r.rental_id    = p.rental_id
GROUP BY a.actor_id, a.first_name, a.last_name
ORDER BY total_revenue DESC
LIMIT 10;

/* ---------------------------------------------------------
Analysis: Rental Rate Distribution
Tables  : film
--------------------------------------------------------- */
SELECT rental_rate,
       COUNT(film_id) AS film_count
FROM film
GROUP BY rental_rate
ORDER BY rental_rate;

/* ---------------------------------------------------------
Analysis: Rental Rate vs. Rentals and Revenue
Tables  : film, inventory, rental, payment
--------------------------------------------------------- */
SELECT
  f.rental_rate,
  COUNT(r.rental_id)      AS rentals,
  ROUND(SUM(p.amount), 2) AS revenue
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r    ON i.inventory_id = r.inventory_id
LEFT JOIN payment p ON p.rental_id = r.rental_id
GROUP BY f.rental_rate
ORDER BY f.rental_rate;

/* ---------------------------------------------------------
Analysis: Average Rental Rate
Tables  : film
--------------------------------------------------------- */
SELECT AVG(rental_rate) AS avg_rental_rate
FROM film;

/* ---------------------------------------------------------
Analysis: Revenue by Movie
Tables  : film, inventory, rental, payment
--------------------------------------------------------- */
SELECT film.title,
       SUM(payment.amount) AS total_revenue
FROM film
JOIN inventory ON film.film_id = inventory.film_id
JOIN rental    ON inventory.inventory_id = rental.inventory_id
JOIN payment   ON rental.rental_id = payment.rental_id
GROUP BY film.title
ORDER BY total_revenue DESC;

/* ---------------------------------------------------------
Analysis: Average Rental Duration
Tables  : rental
--------------------------------------------------------- */
SELECT AVG(return_date - rental_date) AS avg_rental_duration
FROM rental
WHERE return_date IS NOT NULL;

/* ---------------------------------------------------------
Analysis: High-value Customers
Tables  : country, payment, customer, address, city
--------------------------------------------------------- */
SELECT co.country,
       SUM(p.amount) AS total_revenue
FROM country co
JOIN city ci     ON co.country_id = ci.country_id
JOIN address a   ON ci.city_id    = a.city_id
JOIN customer c  ON a.address_id  = c.address_id
JOIN payment p   ON c.customer_id = p.customer_id
GROUP BY co.country
ORDER BY total_revenue DESC;
